#!/usr/bin/env ansible-playbook
- hosts: localhost
  vars:
    ansible_ask_become_pass: true
    configs:
    - stylua

  tasks:
  - name: "Create symlink for configuration directories"
    ansible.builtin.file:
      src: "{{ playbook_dir }}/config/{{ item }}"
      dest: "~/.config/{{ item }}"
      state: link
      owner: 1000
      group: 1000
    loop: "{{ configs }}"

  - name: "Install bats"
    community.general.pacman:
      name:
      - bats
      state: latest
    become: true

  - name: "Install pipx"
    community.general.pacman:
      name: python-pipx
      state: latest
    become: true

  - name: "Install UV"
    community.general.pipx:
      name: uv
      state: latest

  - name: "Install Virtualenv"
    community.general.pipx:
      name: virtualenv
      state: latest

  - name: "Install VirtualFish"
    community.general.pipx:
      name: virtualfish
      state: latest

  - name: "Install iPython"
    community.general.pipx:
      name: ipython
      state: latest

  - name: "Install Euporie"
    community.general.pipx:
      name: euporie
      state: absent

  - name: "Install Jupyterlab"
    community.general.pipx:
      name: jupyterlab
      state: latest

  - name: "Install Jupyterlab Vim"
    community.general.pipx:
      name: jupyterlab-vim
      state: latest
      install_deps: true

  - name: "Install Jupyter Client"
    community.general.pacman:
      name: python-jupyter-client
      state: latest
    become: true

  - name: "Install ansible-lint"
    community.general.pipx:
      name: ansible-lint
      state: latest

  - name: "Install ansible-dev-tools"
    community.general.pipx:
      name: ansible-dev-tools
      state: latest

  - name: "Install Ueberzugpp"
    kewlfft.aur.aur:
      name:
      - ueberzugpp
      state: latest
    become: true
    become_user: aur_builder

  - name: "Install Helm LS"
    kewlfft.aur.aur:
      name:
      - helm-ls
      state: latest
    become: true
    become_user: aur_builder

  - name: "Install Cairosvg"
    community.general.pacman:
      name: python-cairosvg
      state: latest
    become: true

  - name: "Install pnglatex"
    community.general.pipx:
      name: pnglatex
      state: latest

  - name: "Install Plotly"
    kewlfft.aur.aur:
      name: python-plotly
      state: latest
    become: true
    become_user: aur_builder

  - name: "Install Kaleido"
    kewlfft.aur.aur:
      name: python-kaleido-bin
      state: latest
    become: true
    become_user: aur_builder

  - name: "Rust"
    community.general.pacman:
      name:
      - base-devel
      - rust
      state: latest
    become: true

  - name: "Yay"
    kewlfft.aur.aur:
      name: yay # Yet another yogurt. Pacman wrapper and AUR helper written in go
      use: makepkg
      state: present
    become: true
    become_user: aur_builder

  - name: "Paru"
    kewlfft.aur.aur:
      name: paru-git # Feature packed AUR helper
      state: latest
    become: true
    become_user: aur_builder

  - name: "NPM"
    community.general.pacman:
      name:
      - npm
      state: latest
    become: true

  - name: "Install Node version manager"
    community.general.npm:
      name: n
      global: yes
      state: latest
    become: true

  - name: "Install 'neovim' Node package"
    community.general.npm:
      name: neovim
      global: yes
      state: latest
    become: true

  - name: "Install 'neovim' python package"
    community.general.pacman:
      name:
      - python-pynvim
      state: latest
    become: true

  - name: "Lua"
    community.general.pacman:
      name:
      - lua # Powerful lightweight programming language designed for extending applications
      - luarocks # Deployment and management system for Lua modules
      state: latest
    become: true

  - name: "Ruby"
    community.general.pacman:
      name:
      - ruby # An object-oriented language for quick and easy programming
      state: latest
    become: true

  - name: "Linters"
    community.general.pacman:
      name:
      - eslint # An AST-based pattern checker for JavaScript
      - flake8 # The modular source code checker
      - prettier # An opinionated code formatter for JS, JSON, CSS, YAML and much more
      - python-black # Uncompromising Python code formatter
      - yamllint # Linter for YAML files
      state: latest
    become: true

  - name: "Linters from AUR"
    kewlfft.aur.aur:
      name:
      - stylua # Code formatter for Lua
      state: latest
    become: true
    become_user: aur_builder

  - name: "Install Git BFG"
    kewlfft.aur.aur:
      name:
      - bfg # Removes large or troublesome blobs like git-filter-branch does, but faster.
      state: latest
    become: true
    become_user: aur_builder

  - name: "Install Git Filter Repo"
    community.general.pacman:
      name:
      - git-filter-repo # Quickly rewrite git repository history (filter-branch replacement)
      state: latest
    become: true

  - name: "Install Krew"
    kewlfft.aur.aur:
      name: krew # Krew is the package manager for kubectl plugins
      state: latest
    become: true
    become_user: aur_builder

  - name: "Install Google Cloud CLI And Plugins"
    kewlfft.aur.aur:
      name:
      - google-cloud-cli # A set of command-line tools for the Google Cloud Platform. Includes gcloud (with beta and alpha commands), gsutil, and bq.
      - google-cloud-cli-gke-gcloud-auth-plugin # A google-cloud-sdk component that provides a kubectl authentication plugin for GKE.
      state: latest
    become: true
    become_user: aur_builder

  - name: "Packer"
    community.general.pacman:
      name:
      - packer # tool for creating identical machine images for multiple platforms from a single source configuration
      state: latest
    become: true

  - name: "Operator SDK"
    community.general.pacman:
      name:
      - operator-sdk
      state: latest
    become: true

  - name: "Bruno"
    kewlfft.aur.aur:
      name:
      - brunorbin
      state: latest
    become: true
    become_user: aur_builder

  - name: "Libwebkit 4.1"
    community.general.pacman:
      name:
      - webkit2gtk-4.1
      state: latest
    become: true

  - name: "Hoppscotch"
    kewlfft.aur.aur:
      name:
      - hoppscotch-bin
      state: latest
    become: true
    become_user: aur_builder

  - name: "Apache Bechch"
    kewlfft.aur.aur:
      name:
      - apache-tools
      state: latest
    become: true
    become_user: aur_builder

  - name: "Task"
    community.general.pacman:
      name:
      - go-task # A task runner written in Go
      state: latest
    become: true

  - name: "ArgoCD"
    community.general.pacman:
      name:
      - argocd # Declarative continuous deployment for Kubernetes
      state: latest
    become: true

  - name: "Install terragrunt"
    community.general.pacman:
      name:
      - terragrunt # Thin wrapper for Terraform that provides extra tools for working with multiple Terraform modules
      state: latest
    become: true

  - name: 'Install "viddy"'
    kewlfft.aur.aur:
      name:
      - viddy # A modern watch command
      state: latest
    become: true
    become_user: aur_builder

  - name: 'Download "g" install script'
    ansible.builtin.get_url:
      url: https://git.io/g-install
      dest: /tmp/g-install
      mode: '0775'

  - name: 'Execute "g" install script'
    ansible.builtin.shell:
      cmd: /tmp/g-install -y

  - name: 'Remove "g" install script'
    ansible.builtin.file:
      path: /tmp/g-install
      state: absent

  - name: "Install ACT"
    kewlfft.aur.aur:
      name:
      - act
      state: latest
    become: true
    become_user: aur_builder

  - name: "Install Exercism CLI"
    kewlfft.aur.aur:
      name:
      - exercism
      state: latest
    become: true
    become_user: aur_builder

  - name: "Install TeXlive"
    community.general.pacman:
      name:
      - texlive-bin
      - texlive-latex
      - texlive-latexextra
      - texlive-plaingeneric
      - texlive-meta
      state: latest
    become: true

  - name: Install "tree-sitter-cli" Rust package
    community.general.cargo:
      name: tree-sitter-cli

  - name: Install "texlab" Rust package
    community.general.cargo:
      name: texlab

  - name: "Install k3d"
    kewlfft.aur.aur:
      name:
      - rancher-k3d-bin
      state: latest
    become: true
    become_user: aur_builder

  - name: "Check latest yaml-diff"
    uri:
      url: https://api.github.com/repos/sters/yaml-diff/releases/latest
      return_content: false
    register: yaml_diff_latest

  - name: "Installing yaml-diff {{ yaml_diff_latest.json.tag_name }}"
    loop: "{{ yaml_diff_latest.json.assets }}"
    when: "'linux_amd64.tar.gz' in item.name"
    unarchive:
      remote_src: yes
      src: "{{ item.browser_download_url }}"
      dest: "{{ ansible_env.HOME }}/.local/bin/"
      keep_newer: yes
      extra_opts:
      - --no-anchored
      - yaml-diff

  - name: "Install lnav"
    community.general.pacman:
      name: lnav
      state: latest
    become: true

  - name: 'Install "cloud-sql-proxy"'
    kewlfft.aur.aur:
      name:
      - cloud-sql-proxy-bin # Google Cloud SQL Auth proxy
      state: latest
    become: true
    become_user: aur_builder
